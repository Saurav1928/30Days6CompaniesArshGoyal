class Solution {
public:
    void solve(int k, int n, int ind, vector<vector<int>>& ans,
               vector<int> ds) {
        if (n == 0 and k == 0) {
            int i = 0;
            for (i = 0; i < ds.size() - 1; i++) {
                if (ds[i] >= ds[i + 1])
                    break;
            }
            if (i == ds.size() - 1)
                ans.push_back(ds);
            return;
        }
        if (n <= 0 or k <= 0)
            return;
        for (int i = ind; i <= 9; i++) {
            ds.push_back(i);
            solve(k - 1, n - i, ind + 1, ans, ds);
            ds.pop_back();
        }
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> ds;
        solve(k, n, 1, ans, ds);
        return ans;
    }
};
